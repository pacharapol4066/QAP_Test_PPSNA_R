rn1 <- as.matrix(f_jacc[,1])
f_jacc <- f_jacc[2:8]
row.names(f_jacc) <- rn1
rn2 <- as.matrix(f_lift[,1])
f_lift <- f_lift[2:8]
row.names(f_lift) <- rn2
rn3 <- as.matrix(f_incu[,1])
f_incu <- f_incu[2:8]
row.names(f_incu) <- rn3
rn4 <- as.matrix(f_cosi[,1])
f_cosi <- f_cosi[2:8]
row.names(f_cosi) <- rn4
adjm_jacc <- as.matrix(f_jacc)
adjm_lift <- as.matrix(f_lift)
adjm_incu <- as.matrix(f_incu)
adjm_cosi <- as.matrix(f_cosi)
g <- list(adjm_jacc, adjm_lift, adjm_incu, adjm_cosi)
#Perform qap tests of graph correlation
q.12<-qaptest(list(adjm_jacc, adjm_lift),gcor,g1=1,g2=2, reps=1000)
summary(q.12) # Jacc vs Lift
#Perform qap tests of graph correlation
q.12<-qaptest(g,gcor,g1=1,g2=2, reps=1000)
q.13<-qaptest(g,gcor,g1=1,g2=3, reps=1000)
q.14<-qaptest(g,gcor,g1=1,g2=4, reps=1000)
q.23<-qaptest(g,gcor,g1=2,g2=3, reps=1000)
q.24<-qaptest(g,gcor,g1=2,g2=4, reps=1000)
q.34<-qaptest(g,gcor,g1=3,g2=4, reps=1000)
summary(q.12) # Jacc vs Lift
summary(q.13) # Jacc vs Incursion
summary(q.14) # Jacc vs Cosine
summary(q.23) # Lift vs Incursion
summary(q.24) # Lift vs Cosine
summary(q.34) # Incursion vs Cosine
# Second Methods to test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
g1 <- graph_from_adjacency_matrix(adjm_jacc, weighted=TRUE, mode="upper")
library(readxl)
library(igraph)
library(sna)
f_jacc <- read_excel("D:/development_TestCase/QAP_Test_PPSNA_R/source/comment_robust_jaccard.xlsx")
f_lift <- read_excel("D:/development_TestCase/QAP_Test_PPSNA_R/source/comment_robust_lift.xlsx")
f_incu <- read_excel("D:/development_TestCase/QAP_Test_PPSNA_R/source/comment_robust_incur.xlsx")
f_cosi <- read_excel("D:/development_TestCase/QAP_Test_PPSNA_R/source/comment_robust_cosine.xlsx")
rn1 <- as.matrix(f_jacc[,1])
f_jacc <- f_jacc[2:8]
row.names(f_jacc) <- rn1
rn2 <- as.matrix(f_lift[,1])
f_lift <- f_lift[2:8]
row.names(f_lift) <- rn2
rn3 <- as.matrix(f_incu[,1])
f_incu <- f_incu[2:8]
row.names(f_incu) <- rn3
rn4 <- as.matrix(f_cosi[,1])
f_cosi <- f_cosi[2:8]
row.names(f_cosi) <- rn4
adjm_jacc <- as.matrix(f_jacc)
adjm_lift <- as.matrix(f_lift)
adjm_incu <- as.matrix(f_incu)
adjm_cosi <- as.matrix(f_cosi)
g1 <- graph_from_adjacency_matrix(adjm_jacc, weighted=TRUE, mode="upper")
g2 <- graph_from_adjacency_matrix(adjm_lift, weighted=TRUE, mode="upper")
g <- array(g1, g2)
g <- list(g1, g2)
View(f_jacc)
#Perform qap tests of graph correlation
q.12<-qaptest(g,gcor,g1=1,g2=2, reps=1000)
g <- array(dim=c(4,7,7))
g[1,,] <- g1
View(g1)
g <- array(dim=c(4,10,10))
g[1,,] <- g1
g[2,,] <- g2
g1 <- graph_from_adjacency_matrix(adjm_jacc, weighted=TRUE, mode="upper")
g2 <- graph_from_adjacency_matrix(adjm_lift, weighted=TRUE, mode="upper")
g <- array(dim=c(4,10,10))
g[1,,] <- g1
g[2,,] <- g2
g2
plot(g2)
g[2,,]<-g2
#Perform qap tests of graph correlation
q.12<-qaptest(g,gcor,g1=1,g2=2, reps=1000)
g[3,,]<-g2
g[4,,]<-g2
g[,1,]<-g2
library(readxl)
library(igraph)
library(sna)
f_jacc <- read_excel("D:/development_TestCase/QAP_Test_PPSNA_R/source/comment_robust_jaccard.xlsx")
f_lift <- read_excel("D:/development_TestCase/QAP_Test_PPSNA_R/source/comment_robust_lift.xlsx")
f_incu <- read_excel("D:/development_TestCase/QAP_Test_PPSNA_R/source/comment_robust_incur.xlsx")
f_cosi <- read_excel("D:/development_TestCase/QAP_Test_PPSNA_R/source/comment_robust_cosine.xlsx")
rn1 <- as.matrix(f_jacc[,1])
f_jacc <- f_jacc[2:8]
row.names(f_jacc) <- rn1
rn2 <- as.matrix(f_lift[,1])
f_lift <- f_lift[2:8]
row.names(f_lift) <- rn2
rn3 <- as.matrix(f_incu[,1])
f_incu <- f_incu[2:8]
row.names(f_incu) <- rn3
rn4 <- as.matrix(f_cosi[,1])
f_cosi <- f_cosi[2:8]
row.names(f_cosi) <- rn4
adjm_jacc <- as.matrix(f_jacc)
adjm_lift <- as.matrix(f_lift)
adjm_incu <- as.matrix(f_incu)
adjm_cosi <- as.matrix(f_cosi)
#g <- array(dim=c(4,10,10))
g <- list(adjm_jacc,adjm_lift,adjm_incu,adjm_cosi)
#Perform qap tests of graph correlation
q.12<-qaptest(g,gcor,g1=1,g2=2, reps=1000)
summary(q.12) # Jacc vs Lift
#Perform qap tests of graph correlation
q.12<-qaptest(g,gcor,g1=1,g2=1, reps=1000)
summary(q.12) # Jacc vs Lift
#Perform qap tests of graph correlation
q.12<-qaptest(g,gcor,g1=1,g2=2, reps=1000)
View(q.12)
summary(q.12) # Jacc vs Lift
g <- array(dim=c(4,10,10))
g[1,,] <- adjm_jacc
g[2,,] <- adjm_lift
g <- array(dim=c(2,nrow(adjm_jacc),nrow(adjm_lift)))
g[1,,] <- adjm_jacc
g[2,,] <- adjm_lift
#Perform qap tests of graph correlation
q.12<-qaptest(g,gcor,g1=1,g2=2, reps=1000)
summary(q.12) # Jacc vs Lift
g <- array(dim=c(4,nrow(adjm_jacc),nrow(adjm_lift),nrow(adjm_incu),nrow(adjm_cosi)))
g[1,,] <- adjm_jacc
g[2,,] <- adjm_lift
g[3,,] <- adjm_incu
g[4,,] <- adjm_cosi
g <- array(dim=c(4,7,7))
g[1,,] <- adjm_jacc
g[2,,] <- adjm_lift
g[3,,] <- adjm_incu
g[4,,] <- adjm_cosi
#Perform qap tests of graph correlation
q.12<-qaptest(g,gcor,g1=1,g2=2, reps=1000)
q.13<-qaptest(g,gcor,g1=1,g2=3, reps=1000)
q.14<-qaptest(g,gcor,g1=1,g2=4, reps=1000)
q.23<-qaptest(g,gcor,g1=2,g2=3, reps=1000)
q.24<-qaptest(g,gcor,g1=2,g2=4, reps=1000)
q.34<-qaptest(g,gcor,g1=3,g2=4, reps=1000)
summary(q.12) # Jacc vs Lift
summary(q.13) # Jacc vs Incursion
summary(q.14) # Jacc vs Cosine
summary(q.23) # Lift vs Incursion
summary(q.24) # Lift vs Cosine
summary(q.34) # Incursion vs Cosine
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
summary(q.12) # Jacc vs Lift
summary(q.13) # Jacc vs Incursion
summary(q.14) # Jacc vs Cosine
summary(q.23) # Lift vs Incursion
summary(q.24) # Lift vs Cosine
summary(q.34) # Incursion vs Cosine
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
summary(q.12) # Jacc vs Lift
summary(q.13) # Jacc vs Incursion
summary(q.14) # Jacc vs Cosine
summary(q.23) # Lift vs Incursion
summary(q.24) # Lift vs Cosine
summary(q.34) # Incursion vs Cosine
library(readxl)
library(igraph)
library(sna)
f_jacc <- read_excel("D:/development_TestCase/QAP_Test_PPSNA_R/source/comment_robust_jaccard.xlsx")
f_lift <- read_excel("D:/development_TestCase/QAP_Test_PPSNA_R/source/comment_robust_lift.xlsx")
f_incu <- read_excel("D:/development_TestCase/QAP_Test_PPSNA_R/source/comment_robust_incur.xlsx")
f_cosi <- read_excel("D:/development_TestCase/QAP_Test_PPSNA_R/source/comment_robust_cosine.xlsx")
rn1 <- as.matrix(f_jacc[,1])
f_jacc <- f_jacc[2:8]
row.names(f_jacc) <- rn1
rn2 <- as.matrix(f_lift[,1])
f_lift <- f_lift[2:8]
row.names(f_lift) <- rn2
rn3 <- as.matrix(f_incu[,1])
f_incu <- f_incu[2:8]
row.names(f_incu) <- rn3
rn4 <- as.matrix(f_cosi[,1])
f_cosi <- f_cosi[2:8]
row.names(f_cosi) <- rn4
adjm_jacc <- as.matrix(f_jacc)
adjm_lift <- as.matrix(f_lift)
adjm_incu <- as.matrix(f_incu)
adjm_cosi <- as.matrix(f_cosi)
g <- list(adjm_jacc,adjm_lift,adjm_incu,adjm_cosi)
#Perform qap tests of graph correlation
q.12<-qaptest(g,gcor,g1=1,g2=2, reps=1000)
q.13<-qaptest(g,gcor,g1=1,g2=3, reps=1000)
q.14<-qaptest(g,gcor,g1=1,g2=4, reps=1000)
q.23<-qaptest(g,gcor,g1=2,g2=3, reps=1000)
q.24<-qaptest(g,gcor,g1=2,g2=4, reps=1000)
q.34<-qaptest(g,gcor,g1=3,g2=4, reps=1000)
# Second Methods to test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
summary(q.12) # Jacc vs Lift
summary(q.13) # Jacc vs Incursion
summary(q.14) # Jacc vs Cosine
summary(q.23) # Lift vs Incursion
summary(q.24) # Lift vs Cosine
summary(q.34) # Incursion vs Cosine
plot(q.34)
# Second Methods to test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
View(adjm_jacc)
View(adjm_incu)
View(adjm_lift)
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# Second Methods to test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# Second Methods to test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
View(adjm_jacc)
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# Second Methods to test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
summary(q.12) # Jacc vs Lift
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# Second Methods to test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# Second Methods to test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# Second Methods to test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
View(adjm_cosi)
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
View(adjm_cosi)
# Second Methods to test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# Second Methods to test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# Second Methods to test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
library(readxl)
library(quanteda)
library(igraph)
library(bibliometrix)
library(CINNA)
comment_nlp <- read_excel("./output/comment_cooc_jacc.xlsx")
row_names <- as.matrix(comment_nlp[,1])   # Get col name
comment_nlp_meiji <- comment_nlp[0:-12,0:-13]
row_names <- row_names[13:195]
row.names(comment_nlp) <- row_names
adjmt <- as.matrix(comment_nlp)
total_occurrences <- colSums(adjmt)
G <- graph_from_adjacency_matrix(adjmt, weighted=TRUE, mode="upper")
comment_nlp <- read_excel("./output/comment_cooc_jacc.xlsx")
comment_nlp <- read_excel("./source/comment_cooc_jacc.xlsx")
row_names <- as.matrix(comment_nlp[,1])   # Get col name
View(comment_nlp)
library(readxl)
library(quanteda)
library(igraph)
library(bibliometrix)
library(CINNA)
comment_nlp <- read_excel("./source/comment_cooc_jacc.xlsx")
rn1 <- as.matrix(comment_nlp[,1])
comment_nlp <- comment_nlp[2:338]
row.names(comment_nlp) <- rn1
adjmt <- as.matrix(comment_nlp)
View(adjmt)
total_occurrences <- colSums(adjmt)
G <- graph_from_adjacency_matrix(adjmt, weighted=TRUE, mode="upper")
par(mar=c(1,1,1,1))
net <- networkPlot(adjmt , cluster = "louvain", n = vcount(G), type = "mds")
net2VOSviewer(net, vos.path = "VOS")
View(adjmt)
View(adjmt)
net2VOSviewer(net, vos.path = "VOS")
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_VOS_Graph.r')
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_VOS_Graph.r')
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_VOS_Graph.r')
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
View(adjm_jacc)
View(adjm_cosi)
summary(q.12) # Jacc vs Lift
summary(q.13) # Jacc vs Incursion
summary(q.14) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
summary(q.12) # Jacc vs Lift
summary(q.13) # Jacc vs Incursion
summary(q.14) # Jacc vs Cosine
summary(q.23) # Lift vs Incursion
summary(q.24) # Lift vs Cosine
summary(q.34) # Incursion vs Cosine
summary(q.14) # Jacc vs Cosine
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
plot(q.14)
plot(q.12)
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
summary(q.99)
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
summary(q.99)
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
gcor(adjm_ques,adjm_cros)
# Cross Validation
summary(q.99)
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# Cross Validation
q.99<-qaptest(g2,gcor,g1=1,g2=2, reps=1000)
summary(q.99)
gcor(adjm_ques,adjm_cros)
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# Cross Validation
q.99<-qaptest(g2,gcor,g1=1,g2=2, reps=1000)
summary(q.99)
gcor(adjm_ques,adjm_cros)
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# Cross Validation
q.99<-qaptest(g2,gcor,g1=1,g2=2, reps=1000)
summary(q.99)
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
#proportion
gcor(adjm_jacc,adjm_pop1) # proportion Full vs 1/16
gcor(adjm_jacc,adjm_pop2) # proportion Full vs 1/8
gcor(adjm_jacc,adjm_pop3) # proportion Full vs 1/4
gcor(adjm_jacc,adjm_pop4) # proportion Full vs 1/2
summary(q.p12) # proportion Full vs 1/16
summary(q.p13) # proportion Full vs 1/8
summary(q.p14) # proportion Full vs 1/4
summary(q.p23) # proportion Full vs 1/2
summary(q.p15) # proportion Full vs 1/2
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# 3.proportion QAP Test
gcor(adjm_jacc,adjm_pop1) # proportion Full vs 1/16
gcor(adjm_jacc,adjm_pop2) # proportion Full vs 1/8
gcor(adjm_jacc,adjm_pop3) # proportion Full vs 1/4
gcor(adjm_jacc,adjm_pop4) # proportion Full vs 1/2
# 3.proportion QAP Test
q.p12<-qaptest(g3,gcor,g1=1,g2=2, reps=1000)
q.p13<-qaptest(g3,gcor,g1=1,g2=3, reps=1000)
q.p14<-qaptest(g3,gcor,g1=1,g2=4, reps=1000)
q.p15<-qaptest(g3,gcor,g1=1,g2=5, reps=1000)
# 3.proportion QAP Test
gcor(adjm_jacc,adjm_pop1) # proportion Full vs 1/16
gcor(adjm_jacc,adjm_pop2) # proportion Full vs 1/8
gcor(adjm_jacc,adjm_pop3) # proportion Full vs 1/4
gcor(adjm_jacc,adjm_pop4) # proportion Full vs 1/2
# 3.proportion QAP Test
summary(q.p12) # proportion Full vs 1/16
View(f_pop1)
View(adjm_pop1)
View(adjm_pop2)
View(adjm_pop3)
View(adjm_pop4)
View(adjm_jacc)
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# 3.proportion QAP Test
gcor(adjm_jacc,adjm_pop1) # proportion Full vs 1/16
gcor(adjm_jacc,adjm_pop2) # proportion Full vs 1/8
gcor(adjm_jacc,adjm_pop3) # proportion Full vs 1/4
gcor(adjm_jacc,adjm_pop4) # proportion Full vs 1/2
# 3.proportion QAP Test
summary(q.p12) # proportion Full vs 1/16
summary(q.p13) # proportion Full vs 1/8
summary(q.p14) # proportion Full vs 1/4
summary(q.p15) # proportion Full vs 1/2
# 3.proportion QAP Test
gcor(adjm_jacc,adjm_pop1) # proportion Full vs 1/16
gcor(adjm_jacc,adjm_pop2) # proportion Full vs 1/8
gcor(adjm_jacc,adjm_pop3) # proportion Full vs 1/4
gcor(adjm_jacc,adjm_pop4) # proportion Full vs 1/2
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
gcor(adjm_ques,adjm_cros)
summary(q.99)
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# 1.Substitute method QAP Test
summary(q.12) # Jacc vs Lift
# 1.Substitute method QAP Test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
# 2.Cross Validation
q.99<-qaptest(g2,gcor,g1=1,g2=2, reps=1000)
gcor(adjm_ques,adjm_cros)
# 3.proportion QAP Test
gcor(adjm_jacc,adjm_pop1) # proportion Full vs 1/16
gcor(adjm_jacc,adjm_pop2) # proportion Full vs 1/8
gcor(adjm_jacc,adjm_pop3) # proportion Full vs 1/4
gcor(adjm_jacc,adjm_pop4) # proportion Full vs 1/2
# 1.Substitute method QAP Test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
summary(q.14) # Jacc vs Cosine
# 1.Substitute method QAP Test
summary(q.12) # Jacc vs Lift
summary(q.13) # Jacc vs Incursion
summary(q.14) # Jacc vs Cosine
summary(q.23) # Lift vs Incursion
summary(q.24) # Lift vs Cosine
summary(q.34) # Incursion vs Cosine
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# 1.Substitute method QAP Test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
gcor(adjm_ques,adjm_cros)
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# 1.Substitute method QAP Test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
gcor(adjm_ques,adjm_cros)
# 3.proportion QAP Test
gcor(adjm_jacc,adjm_pop1) # proportion Full vs 1/16
gcor(adjm_jacc,adjm_pop2) # proportion Full vs 1/8
gcor(adjm_jacc,adjm_pop3) # proportion Full vs 1/4
gcor(adjm_jacc,adjm_pop4) # proportion Full vs 1/2
source('D:/development_TestCase/QAP_Test_PPSNA_R/PPSNA_QAP_Corr.R')
# 1.Substitute method QAP Test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
gcor(adjm_ques,adjm_cros)
# 3.proportion QAP Test
summary(q.p12) # proportion Full vs 1/16
# 3.proportion QAP Test
gcor(adjm_jacc,adjm_pop1) # proportion Full vs 1/16
gcor(adjm_jacc,adjm_pop2) # proportion Full vs 1/8
gcor(adjm_jacc,adjm_pop3) # proportion Full vs 1/4
gcor(adjm_jacc,adjm_pop4) # proportion Full vs 1/2
# 1.Substitute method QAP Test
gcor(adjm_jacc,adjm_lift) # Jacc vs Lift
gcor(adjm_jacc,adjm_incu) # Jacc vs Incursion
gcor(adjm_jacc,adjm_cosi) # Jacc vs Cosine
gcor(adjm_lift,adjm_incu) # Lift vs Incursion
gcor(adjm_lift,adjm_cosi) # Lift vs Cosine
gcor(adjm_incu,adjm_cosi) # Incursion vs Cosine
